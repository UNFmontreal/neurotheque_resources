{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "NeuroTheque Pipeline Configuration",
  "type": "object",
  "properties": {
    "directory": {
      "type": "object",
      "properties": {
        "root": {
          "type": "string",
          "description": "Root directory for the project"
        },
        "raw_data_dir": {
          "type": "string",
          "description": "Directory for raw data relative to root"
        },
        "processed_dir": {
          "type": "string",
          "description": "Directory for processed data relative to root"
        },
        "reports_dir": {
          "type": "string",
          "description": "Directory for reports relative to root"
        },
        "derivatives_dir": {
          "type": "string",
          "description": "Directory for derivatives relative to root"
        }
      },
      "required": ["root", "raw_data_dir", "processed_dir", "reports_dir", "derivatives_dir"]
    },
    "pipeline_mode": {
      "type": "string",
      "enum": ["standard", "restart", "resume"],
      "default": "standard",
      "description": "Mode to run the pipeline: standard (use checkpoints if available), restart (always start from beginning), resume (always try to find latest checkpoint)"
    },
    "start_from_step": {
      "type": ["string", "null"],
      "description": "Name of the step to start from (will skip all steps before this one)"
    },
    "auto_save": {
      "type": "boolean",
      "default": true,
      "description": "Automatically save data after each processing step"
    },
    "file_path_pattern": {
      "type": "string",
      "description": "Glob pattern to find files to process in multi-subject mode"
    },
    "pipeline": {
      "type": "object",
      "properties": {
        "steps": {
          "type": "array",
          "description": "List of pipeline steps to execute",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the step to execute"
              },
              "params": {
                "type": "object",
                "description": "Parameters for the step"
              }
            },
            "required": ["name"],
            "allOf": [
              {
                "if": {"properties": {"name": {"const": "SaveCheckpoint"}}},
                "then": {
                  "properties": {
                    "params": {
                      "type": "object",
                      "properties": {
                        "checkpoint_key": {"type": "string"},
                        "overwrite": {"type": ["boolean", "null"]}
                      },
                      "required": ["checkpoint_key"]
                    }
                  }
                }
              },
              {
                "if": {"properties": {"name": {"const": "LoadData"}}},
                "then": {
                  "properties": {
                    "params": {
                      "type": "object",
                      "properties": {
                        "input_file": {"type": ["string", "null"]},
                        "stim_channel": {"type": ["string", "null"]}
                      },
                      "additionalProperties": true
                    }
                  }
                }
              },
              {
                "if": {"properties": {"name": {"const": "FilterStep"}}},
                "then": {
                  "properties": {
                    "params": {
                      "type": "object",
                      "properties": {
                        "l_freq": {"type": ["number", "null"]},
                        "h_freq": {"type": ["number", "null"]},
                        "notch_freqs": {"type": ["array", "null"], "items": {"type": "number"}}
                      },
                      "additionalProperties": true
                    }
                  }
                }
              },
              {
                "if": {"properties": {"name": {"const": "EpochingStep"}}},
                "then": {
                  "properties": {
                    "params": {
                      "type": "object",
                      "properties": {
                        "task_type": {"type": "string", "enum": ["5pt", "gng", "continuous", "fixed", "custom"]},
                        "trigger_ids": {"type": "object"}
                      },
                      "allOf": [
                        {
                          "if": {"properties": {"task_type": {"const": "5pt"}}},
                          "then": {
                            "properties": {
                              "trigger_ids": {"type": "object", "properties": {"trigger_id": {"type": "integer"}}, "required": ["trigger_id"]}
                            }
                          }
                        },
                        {
                          "if": {"properties": {"task_type": {"const": "gng"}}},
                          "then": {
                            "properties": {
                              "trigger_ids": {
                                "type": "object",
                                "properties": {
                                  "go": {"type": "integer"},
                                  "nogo": {"type": "integer"},
                                  "response": {"type": ["integer", "null"]}
                                },
                                "required": ["go", "nogo"]
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "required": ["steps"]
    }
  },
  "required": ["directory", "pipeline", "default_subject", "default_session", "default_run"]
}
